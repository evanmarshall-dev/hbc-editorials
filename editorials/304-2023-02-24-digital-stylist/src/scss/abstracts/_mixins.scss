/* -----------------------------------------------
 * MEDIA QUERY MIXINS
----------------------------------------------- */
@mixin respond-to($name) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $name) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $name))} {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

/* -----------------------------------------------
 * POSITIONING MIXINS
----------------------------------------------- */
@mixin bayOverlay($position) {
  position: absolute;

  @if $position == "vertical" {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  } @else if $position == "horizontal" {
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translate(-50%);
  } @else if $position == "both" {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }
}
// How to call the style from mixin.
// .foo {
//   @include center(both);
// }

/* -----------------------------------------------
 * SECTION MIXINS
----------------------------------------------- */
@mixin bayflex(
  $flexDirect,
  $flexWrap,
  $alignItems,
  $justContent,
  $fPadding,
  $fMargin,
  $fWidth,
  $fHeight,
  $textAlign
) {
  display: flex;
  flex-direction: $flexDirect;
  flex-wrap: $flexWrap;
  align-items: $alignItems;
  justify-content: $justContent;
  padding: $fPadding;
  margin: $fMargin;
  max-width: $fWidth;
  min-height: $fHeight;
  text-align: $textAlign;
}

/* -----------------------------------------------
 * SIZING MIXINS
----------------------------------------------- */
@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

@mixin line-height($size) {
  line-height: $size;
  line-height: calculateRem($size);
}

@mixin width($size) {
  width: $size;
  width: calculateRem($size);
}

@mixin height($size) {
  height: $size;
  height: calculateRem($size);
}

@mixin margin($size) {
  margin: $size;
  margin: calculateRem($size);
}

@mixin padding($size) {
  padding: $size;
  padding: calculateRem($size);
}

@mixin border-width($size) {
  border-width: $size;
  border-width: calculateRem($size);
}

@mixin border-radius($size) {
  border-radius: $size;
  border-radius: calculateRem($size);
}
// How to call the style from mixin.
// p {
//   @include font-size(14px);
// }

/* -----------------------------------------------
 * FONT MIXINS
----------------------------------------------- */
@mixin bayHeading($fontFam, $fontColor, $fontSize, $lineHeight, $fMargin) {
  @extend %heading-placeholder;
  font-family: $fontFam;
  color: $fontColor;
  @include font-size($fontSize);
  @include line-height($lineHeight);
  margin: $fMargin;
}

/* -----------------------------------------------
 * HORIZONTAL RULE MIXINS
----------------------------------------------- */
@mixin hLine($bordRad, $bordWidth, $bordStyle, $bordColor, $hWidth, $lMargin) {
  border-radius: $bordRad;
  border-width: $bordWidth;
  border-style: $bordStyle;
  border-color: $bordColor;
  width: $hWidth;
  margin: $lMargin;
}

/* -----------------------------------------------
 * ANIMATION MIXINS
----------------------------------------------- */
@mixin transition($property, $duration, $timing, $delay) {
  transition-property: $property;
  transition-duration: $duration;
  transition-timing-function: $timing;
  transition-delay: $delay;
}

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}
@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}
// How to call the style from mixin.
// Define animation name, and properties
// @include keyframes(fade-out) {
//   0% { opacity: 1; }
//   90% { opacity: 0; }
// }
// Add animation to element
// .element {
//   width: 100px;
//   height: 100px;
//   background: black;
//   @include animation('fade-out 5s 3');
// }

/* -----------------------------------------------
 * GRADIENTS MIXINS
----------------------------------------------- */
@mixin background-gradient($start-color, $end-color, $orientation) {
  background: $start-color;

  @if $orientation == "vertical" {
    background: -webkit-linear-gradient(top, $start-color, $end-color);
    background: linear-gradient(to bottom, $start-color, $end-color);
  } @else if $orientation == "horizontal" {
    background: -webkit-linear-gradient(left, $start-color, $end-color);
    background: linear-gradient(to right, $start-color, $end-color);
  } @else {
    background: -webkit-radial-gradient(
      center,
      ellipse cover,
      $start-color,
      $end-color
    );
    background: radial-gradient(ellipse at center, $start-color, $end-color);
  }
}
// How to call the style from mixin.
// .foo {
//   @include background-gradient(red, black, 'vertical');
// }

/* -----------------------------------------------
 * BUTTON MIXINS
----------------------------------------------- */
@mixin bayLink(
  $bordRad,
  $bWidth,
  $bBack,
  $bordWidth,
  $bordStyle,
  $bordCol,
  $bCol
) {
  @extend %btn-placeholder;
  @include transition(all, 0.25s, ease-in-out, 0);
  @include border-radius($bordRad);
  width: $bWidth;
  background: $bBack;
  @include border-width($bordWidth);
  border-style: $bordStyle;
  border-color: $bordCol;
  color: $bCol;
}

/* -----------------------------------------------
 * CLIP PATH MIXINS
----------------------------------------------- */
@mixin bayClip($tl, $tr, $br, $bl) {
  clip-path: polygon($tl, $tr, $br, $bl);
}
// How to call the style from mixin.
// @include bayClip(0 0, 100% 0, 100% 75%, 0 100%);
